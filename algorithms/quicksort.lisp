(defun quicksort (vec comp)
  (when (> (length vec) 1)
    (let ((pivot-point 0)
          (pivot (aref vec (1- (length vec)))))
      (dotimes (i (1- (length vec)))
        (when (funcall comp (aref vec i) pivot)
          (rotatef (aref vec i) (aref vec pivot-point))
          (incf pivot-point)))
      (rotatef (aref vec pivot-point) (aref vec (1- (length vec))))
      (quicksort (rtl:slice vec 0 pivot-point) comp)
      (quicksort (rtl:slice vec (1+ pivot-point)) comp))
    vec))
